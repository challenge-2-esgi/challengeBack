version: '3.8'

services:
  api-gateway:
    depends_on:
      - auth-service
      - candidate-service
      - recruiter-service
    image: caddy:2.7-alpine
    container_name: api-gateway
    restart: unless-stopped
    ports:
      - $BACK_PORT:80
    volumes:
      - ./docker/api-gateway/Caddyfile:/etc/caddy/Caddyfile

  auth-service:
    depends_on:
      - db
    image: node:18.16.1-alpine3.17
    container_name: auth-service
    working_dir: /home/node/app
    tty: true
    stdin_open: true
    volumes:
      - ./services/auth-api:/home/node/app

  candidate-service:
    depends_on:
      - db
    image: node:18.16.1-alpine3.17
    container_name: candidate-service
    working_dir: /home/node/app
    tty: true
    stdin_open: true
    volumes:
      - ./services/candidate-api:/home/node/app

  recruiter-service:
    depends_on:
      - db
    image: node:18.16.1-alpine3.17
    container_name: recruiter-service
    working_dir: /home/node/app
    tty: true
    stdin_open: true
    volumes:
      - ./services/recruiter-api:/home/node/app

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.8.1
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${ELASTICSEARCH_PASSWORD}
    ulimits:
      memlock:
        soft: -1
        hard: -1
    deploy:
      resources:
        limits:
          memory: 1G
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - 9200:9200

  db:
    image: postgres:14.8-alpine3.17
    container_name: challenge2_db
    env_file: .env
    environment:
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASSWORD
      POSTGRES_MULTIPLE_DATABASES: $POSTGRES_MULTIPLE_DATABASES
    volumes:
      - ./docker/db:/docker-entrypoint-initdb.d
      - data_db:/var/lib/postgresql/data
  adminer:
    depends_on:
      - db
    image: adminer:4.8.1
    ports:
      - 8080:8080

volumes:
  data_db:
  esdata:

networks:
  challenge2:
    external: true