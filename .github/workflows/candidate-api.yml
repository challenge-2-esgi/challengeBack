name: CI/CD candidate microservice

on:
  push:
    branches:
      - "main"
      - "dev"
    paths:
      - "services/candidate-api/**"
      - ".github/workflows/candidate-api.yml"
      - "k8s/candidate-api.yml"
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - run: echo "test"
    # services:
    #   postgres:
    #     image: postgres:14.8-alpine3.17
    #     env:
    #       POSTGRES_USER: postgres
    #       POSTGRES_PASSWORD: postgres
    #     options: >-
    #       --health-cmd pg_isready
    #       --health-interval 10s
    #       --health-timeout 5s
    #       --health-retries 5
    #     ports:
    #       - 5432:5432
    # env:
    #   DATABASE_URL: postgresql://postgres:postgres@localhost:5432/db_test
    #   AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
    #   AZURE_BLOB_PRIVATE_CONTAINER: ${{ secrets.AZURE_BLOB_PRIVATE_CONTAINER }}
    #   AZURE_BLOB_PUBLIC_CONTAINER: ${{ secrets.AZURE_BLOB_PUBLIC_CONTAINER}}
    #   MICROSERVICE_HOST: ${{ secrets.CANDIDATE_SERVICE_HOST }}
    #   MICROSERVICE_PORT: ${{ secrets.MICROSERVICE_PORT }}
    #   AUTH_SERVICE_HOST: ${{ secrets.AUTH_SERVICE_HOST }}
    #   AUTH_SERVICE_PORT: ${{ secrets.MICROSERVICE_PORT }}
    #   RECRUITER_SERVICE_HOST: ${{ secrets.RECRUITER_SERVICE_HOST }}
    #   RECRUITER_SERVICE_PORT: ${{ secrets.MICROSERVICE_PORT }}
    # defaults:
    #   run:
    #     working-directory: ./services/candidate-api
    # steps:
    #   - uses: actions/checkout@v3
    #   - name: Install Dependencies
    #     run: npm install
    #   - name: Migrate DB
    #     run: npx prisma migrate deploy
    #   - name: Run e2e tests
    #     run: npm run test:e2e

  publish-image:
    runs-on: ubuntu-latest
    # needs: test
    steps:
      - run: echo "publish image"
      # - uses: actions/checkout@v3
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2
      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2
      # - name: Log into registry
      #   uses: docker/login-action@v2
      #   with:
      #     registry: ${{ secrets.ACR_ENDPOINT }}
      #     username: ${{ secrets.ACR_USERNAME }}
      #     password: ${{ secrets.ACR_PASSWORD }}
      # - name: Build & Push image
      #   uses: docker/build-push-action@v3
      #   with:
      #     context: "{{defaultContext}}:services/candidate-api"
      #     file: ./docker/Dockerfile
      #     push: true
      #     tags: ${{ secrets.ACR_ENDPOINT }}/candidate-api:${{ github.sha }}
  
  deploy:
    runs-on: ubuntu-latest
    steps:
      - run: echo "deploy"
    # needs: publish-image
    # permissions:
    #   id-token: write
    #   contents: read
    #   actions: read
    # steps:
    #   - uses: actions/checkout@v3
    #   - name: Set AKS Context
    #     uses: azure/aks-set-context@v1
    #     with:
    #       creds: ${{ secrets.AZURE_CREDENTIALS }}
    #       resource-group: ${{ secrets.AZURE_RESOURCE_GROUP }}
    #       cluster-name: ${{ secrets.AKS_CLUSTER }}
    #   - name: Replace Tokens
    #     uses: cschleiden/replace-tokens@v1
    #     with:
    #       files: k8s/candidate-api.yml
    #     env:
    #       ACR: ${{ secrets.ACR_ENDPOINT }}
    #   - name: Deploy Manifests
    #     uses: Azure/k8s-deploy@v4
    #     with:
    #       manifests: |
    #         k8s/candidate-api.yml
    #       images: |
    #         ${{ secrets.ACR_ENDPOINT }}/candidate-api:${{ github.sha }}